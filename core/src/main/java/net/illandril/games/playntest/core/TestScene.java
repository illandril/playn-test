package net.illandril.games.playntest.core;

import net.illandril.games.playntest.core.characters.Mario;
import net.illandril.games.playntest.core.characters.Wall;

import org.jbox2d.collision.shapes.CircleShape;
import org.jbox2d.common.Vec2;
import org.jbox2d.dynamics.Body;
import org.jbox2d.dynamics.BodyDef;
import org.jbox2d.dynamics.BodyType;
import org.jbox2d.dynamics.FixtureDef;

public class TestScene extends PhysicsScene {

  private Mario m;
  private Vec2 pointerScreenPos;

  public TestScene() {
    super();
  }

  @Override
  protected void populateWorld() {
    for (int i = 0; i < 250; i++) {
      BodyDef def = new BodyDef();
      def.position = new Vec2(i * 10 * metersPerPixel, 0);
      def.type = BodyType.DYNAMIC;
      Body b = world.createBody(def);
      FixtureDef fd = new FixtureDef();
      CircleShape shape = new CircleShape();
      shape.m_radius = 10f * metersPerPixel;
      fd.shape = shape;
      b.createFixture(fd);
    }
    m = new Mario(this, world, new Vec2(0.0f, 0.0f), metersPerPixel);

    String[][] worldMap = new String[][] {
        "                                                                                                                                                                                                                    ".split(""),

        "                                                                                                                                                                                                                    ".split(""),

        "                                                                                                                                                                                                      o             ".split(""),

        "                                                                                                                                                                                                     F|             ".split(""),

        "                                                                                   G                                                                                                                  |             ".split(""),

        "                      O                                                         ########   ###O              M           ###    #OO#                                                        ==        |             ".split(""),

        "                                                                                                                                                                                           ===        |             ".split(""),

        "                                                                               G                                                                                                          ====        |     $       ".split(""),

        "                                                                1                                                                                                                        =====        |    ^^^      ".split(""),
        // 2345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789
        "                O   #M#O#                     <>         {}                  #M#              @     #*    O  O  O     #          ##      =  =          ==  =            ###O#           ======        |    R+L      ".split(""),

        "                                      <>      []         []                                                                             ==  ==        ===  ==                          =======        |   ^r&l^     ".split(""),

        "                            <>        []      []         []                                                                            ===  ===      ====  ===     {}              <> ========        |   ++u++     ".split(""),

        "                     G      []        [] G    []     G G []                                    G G        T                G G G G    ====  ====    =====  ====    []        G G   []=========        =   ++8++     ".split(""),

        "---------------------------------------------------------------------  ---------------   ----------------------------------------------------------------  ---------------------------------------------------------".split(""),
        "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx".split("")};
    Vec2 offset = new Vec2(-64, (worldMap.length - 4) * -32);
    Vec2 position = new Vec2(0.0f, 0.0f);
    for (int y = 0; y < worldMap.length; y++) {
      for (int x = 0; x < worldMap[y].length; x++) {
        position.set(x * 32, y * 32);
        position.addLocal(offset);
        if (worldMap[y][x].equals(" ")) {
          // Do nothing
        } else if (worldMap[y][x].equals("-")) {
          new Wall(this, world, position, "floor", metersPerPixel);
        }
      }
    }
  }

  @Override
  public void onPointerStart(playn.core.Pointer.Event event) {
    super.onPointerStart(event);
    pointerScreenPos = new Vec2(event.x(), event.y());
  }

  @Override
  public void onPointerEnd(playn.core.Pointer.Event event) {
    super.onPointerEnd(event);
    pointerScreenPos = null;
  }

  @Override
  public void onPointerDrag(playn.core.Pointer.Event event) {
    super.onPointerDrag(event);
    pointerScreenPos = new Vec2(event.x(), event.y());
  }

  public void update(float delta) {
    if (pointerScreenPos != null) {
      Vec2 target = screenToWorldPosition(pointerScreenPos.x, pointerScreenPos.y);
      Vec2 ppos = m.getWorldCenter();
      Vec2 vel = target.sub(ppos);
      // vel.normalize();
      vel.mulLocal(0.5f);
      m.setLinearVelocity(vel);
    } else {
      // m.setLinearVelocity(new Vec2(0, 0));
    }
    m.update(delta);
    super.update(delta);
    // System.out.println(p.getWorldCenter());
    lookAt(m.getWorldCenter());
    // lookAt(new Vec2(0,0));
  }
}
